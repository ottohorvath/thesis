
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>-------------------------------------------------------------------------------------------------</q-m>
<a name="2"><q-n>     2  </q-n></a><q-m>-- Author: Otto Horvath</q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>-------------------------------------------------------------------------------------------------</q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>-- Description: ~</q-m>
<a name="5"><q-n>     5  </q-n></a><q-m>--</q-m>
<a name="6"><q-n>     6  </q-n></a><q-m>--</q-m>
<a name="7"><q-n>     7  </q-n></a><q-m>-----------------------------------------------------------------------------------------------</q-m>
<a name="8"><q-n>     8  </q-n></a><q-w>library</q-w> ieee                ;
<a name="9"><q-n>     9  </q-n></a><q-w>library</q-w> std                 ;
<a name="10"><q-n>     10  </q-n></a><q-w>library</q-w> work                ;
<a name="11"><q-n>     11  </q-n></a><q-m>-----------------------------</q-m>
<a name="12"><q-n>     12  </q-n></a><q-w>use</q-w> std.env.<q-w>all</q-w>             ;
<a name="13"><q-n>     13  </q-n></a><q-w>use</q-w> std.textio.<q-w>all</q-w>          ;
<a name="14"><q-n>     14  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>    ;
<a name="15"><q-n>     15  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w> ;
<a name="16"><q-n>     16  </q-n></a><q-m>-----------------------------</q-m>
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a>
<a name="19"><q-n>     19  </q-n></a>
<a name="20"><q-n>     20  </q-n></a><q-m>------ Packages from "../tbench_pkg/" ----</q-m>
<a name="21"><q-n>     21  </q-n></a>
<a name="22"><q-n>     22  </q-n></a><q-w>use</q-w> work.tb_utils_pkg.<q-w>all</q-w>       ;
<a name="23"><q-n>     23  </q-n></a><q-w>use</q-w> work.tb_log_pkg.<q-w>all</q-w>         ;
<a name="24"><q-n>     24  </q-n></a><q-w>use</q-w> work.tb_report_pkg.<q-w>all</q-w>      ;
<a name="25"><q-n>     25  </q-n></a>
<a name="26"><q-n>     26  </q-n></a><q-w>use</q-w> work.tb_tc_pkg.<q-w>all</q-w>          ;   <q-m>-- Includes for the 'tc' process.</q-m>
<a name="27"><q-n>     27  </q-n></a><q-w>use</q-w> work.tb_chk_pkg.<q-w>all</q-w>         ;   <q-m>-- Includes for the 'chk' process.</q-m>
<a name="28"><q-n>     28  </q-n></a><q-m>----------------------------------------</q-m>
<a name="29"><q-n>     29  </q-n></a>
<a name="30"><q-n>     30  </q-n></a>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a>
<a name="33"><q-n>     33  </q-n></a><q-w>use</q-w> work.reset_synchronizer_test.<q-w>all</q-w>   ;
<a name="34"><q-n>     34  </q-n></a><q-w>use</q-w> work.reset_synchronizer_check.<q-w>all</q-w>  ;
<a name="35"><q-n>     35  </q-n></a>
<a name="36"><q-n>     36  </q-n></a>
<a name="37"><q-n>     37  </q-n></a>
<a name="38"><q-n>     38  </q-n></a>
<a name="39"><q-n>     39  </q-n></a><q-m>-----------------------------------------------------------------------------------------------</q-m>
<a name="40"><q-n>     40  </q-n></a><q-w>entity</q-w> reset_synchronizer_tb <q-w>is</q-w>
<a name="41"><q-n>     41  </q-n></a>    <q-m>-- These generics are initialized by the Python script at elaboration time.</q-m>
<a name="42"><q-n>     42  </q-n></a>    <q-w>generic</q-w>(
<a name="43"><q-n>     43  </q-n></a>
<a name="44"><q-n>     44  </q-n></a>        <q-w>constant</q-w>    RTL_NAME_G  :           <q-t>string</q-w>;         <q-m>-- RTL name</q-m>
<a name="45"><q-n>     45  </q-n></a>
<a name="46"><q-n>     46  </q-n></a>        <q-w>constant</q-w>    CLI_G       :           <q-t>integer</q-w> := 0;   <q-m>--</q-m>
<a name="47"><q-n>     47  </q-n></a>        <q-w>constant</q-w>    GUI_G       :           <q-t>integer</q-w> := 0;   <q-m>-- Simulation type indicators.</q-m>
<a name="48"><q-n>     48  </q-n></a>        <q-w>constant</q-w>    RGR_G       :           <q-t>integer</q-w> := 0    <q-m>--</q-m>
<a name="49"><q-n>     49  </q-n></a>    );
<a name="50"><q-n>     50  </q-n></a><q-w>end</q-w> <q-w>entity</q-w>;
<a name="51"><q-n>     51  </q-n></a><q-m>-----------------------------------------------------------------------------------------------</q-m>
<a name="52"><q-n>     52  </q-n></a>
<a name="53"><q-n>     53  </q-n></a>
<a name="54"><q-n>     54  </q-n></a><q-w>architecture</q-w> bhv <q-w>of</q-w> reset_synchronizer_tb <q-w>is</q-w>
<a name="55"><q-n>     55  </q-n></a>
<a name="56"><q-n>     56  </q-n></a>    <q-w>constant</q-w>    clk_enabled_c:  <q-t>std_logic</q-w>:= '1';            <q-m>-- Clock is enabled by default.</q-m>
<a name="57"><q-n>     57  </q-n></a>
<a name="58"><q-n>     58  </q-n></a>
<a name="59"><q-n>     59  </q-n></a>
<a name="60"><q-n>     60  </q-n></a>    <q-m>--------- Initializing the generic parameters  ----------</q-m>
<a name="61"><q-n>     61  </q-n></a>    <q-w>procedure</q-w> run_test <q-w>is</q-w> <q-w>new</q-w> tc
<a name="62"><q-n>     62  </q-n></a>        <q-w>generic</q-w> <q-w>map</q-w>(
<a name="63"><q-n>     63  </q-n></a>            new_run_name        =&gt;  <q-l>"run_test"</q-l>      ,       <q-m>-- constant string</q-m>
<a name="64"><q-n>     64  </q-n></a>
<a name="65"><q-n>     65  </q-n></a>            rtl_in_if_t         =&gt;  reset_synchronizer_in_if_t     ,       <q-m>-- type</q-m>
<a name="66"><q-n>     66  </q-n></a>            called_tc           =&gt;  reset_synchronizer_test        ,       <q-m>-- procedure</q-m>
<a name="67"><q-n>     67  </q-n></a>            called_tc_name      =&gt;  <q-l>"reset_synchronizer_test"</q-l>              <q-m>-- constant string</q-m>
<a name="68"><q-n>     68  </q-n></a>        );
<a name="69"><q-n>     69  </q-n></a>    <q-m>-----------------------------------------------------------------------------------</q-m>
<a name="70"><q-n>     70  </q-n></a>
<a name="71"><q-n>     71  </q-n></a>    <q-m>--------- Initializing the generic parameters  ----------</q-m>
<a name="72"><q-n>     72  </q-n></a>    <q-w>procedure</q-w> run_check <q-w>is</q-w> <q-w>new</q-w> chk
<a name="73"><q-n>     73  </q-n></a>        <q-w>generic</q-w> <q-w>map</q-w>(
<a name="74"><q-n>     74  </q-n></a>            new_run_name        =&gt;  <q-l>"run_check"</q-l>     ,       <q-m>-- constant string</q-m>
<a name="75"><q-n>     75  </q-n></a>
<a name="76"><q-n>     76  </q-n></a>            rtl_out_if_t        =&gt;  reset_synchronizer_out_if_t    ,       <q-m>-- type</q-m>
<a name="77"><q-n>     77  </q-n></a>            called_chk          =&gt;  reset_synchronizer_check       ,       <q-m>-- procedure</q-m>
<a name="78"><q-n>     78  </q-n></a>            called_chk_name     =&gt;  <q-l>"reset_synchronizer_check"</q-l>             <q-m>-- constant string</q-m>
<a name="79"><q-n>     79  </q-n></a>        );
<a name="80"><q-n>     80  </q-n></a>    <q-m>-----------------------------------------------------------------------------------</q-m>
<a name="81"><q-n>     81  </q-n></a>
<a name="82"><q-n>     82  </q-n></a>    <q-m>-- Shared variable between 'tc' and 'chk' process</q-m>
<a name="83"><q-n>     83  </q-n></a>    <q-w>shared</q-w> <q-w>variable</q-w> sync_sv :   synchronizer_t;
<a name="84"><q-n>     84  </q-n></a>
<a name="85"><q-n>     85  </q-n></a>    <q-w>signal</q-w>  rtl_out_if      :   reset_synchronizer_out_if_t;
<a name="86"><q-n>     86  </q-n></a>
<a name="87"><q-n>     87  </q-n></a>    <q-w>signal</q-w>      tb_if       :   tb_if_t :=( <q-m>--</q-m>
<a name="88"><q-n>     88  </q-n></a>        clk     =&gt;  '1',                    <q-m>--</q-m>
<a name="89"><q-n>     89  </q-n></a>        clk_en  =&gt;  '0',                    <q-m>-- Testbench resouce related signals.</q-m>
<a name="90"><q-n>     90  </q-n></a>        rstn    =&gt;  '1',                    <q-m>--</q-m>
<a name="91"><q-n>     91  </q-n></a>        rstn_req=&gt;  '0'                     <q-m>--</q-m>
<a name="92"><q-n>     92  </q-n></a>    );                                      <q-m>--</q-m>
<a name="93"><q-n>     93  </q-n></a>
<a name="94"><q-n>     94  </q-n></a><q-w>begin</q-w>
<a name="95"><q-n>     95  </q-n></a>
<a name="96"><q-n>     96  </q-n></a>
<a name="97"><q-n>     97  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="98"><q-n>     98  </q-n></a>    tc:     <q-w>process</q-w> <q-w>is</q-w>
<a name="99"><q-n>     99  </q-n></a>                <q-w>constant</q-w>    this                :   <q-t>string</q-w>      :=  <q-l>"process_tc"</q-l>;
<a name="100"><q-n>     100  </q-n></a>
<a name="101"><q-n>     101  </q-n></a>                <q-w>variable</q-w>    clock_enable_v      :   <q-t>std_logic</q-w>   :=  clk_enabled_c;          <q-m>-- Clock enable, enabled by default</q-m>
<a name="102"><q-n>     102  </q-n></a>            <q-w>begin</q-w>
<a name="103"><q-n>     103  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="104"><q-n>     104  </q-n></a>                setup(RTL_NAME_G,this,              clock_enable_v  ,                       <q-m>--</q-m>
<a name="105"><q-n>     105  </q-n></a>                                                    tb_if.clk_en                            <q-m>-- Setup the testbench.</q-m>
<a name="106"><q-n>     106  </q-n></a>                                                                    );                      <q-m>--</q-m>
<a name="107"><q-n>     107  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="108"><q-n>     108  </q-n></a>                run_test(RTL_NAME_G,this,sync_sv,   rtl_in_if           ,                   <q-m>--</q-m>
<a name="109"><q-n>     109  </q-n></a>                                                    tb_if.clk           ,
<a name="110"><q-n>     110  </q-n></a>                                                    tb_if.rstn_req      ,
<a name="111"><q-n>     111  </q-n></a>                                                    check_descriptor    );<q-m>-- Run the testcases for the chosen RTL</q-m>
<a name="112"><q-n>     112  </q-n></a>                <q-m>-- Drain time</q-m>
<a name="113"><q-n>     113  </q-n></a>                <q-w>wait</q-w> <q-w>for</q-w> 100 ns;
<a name="114"><q-n>     114  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="115"><q-n>     115  </q-n></a>                report_and_exit(RTL_NAME_G,this,    RGR_G           ,
<a name="116"><q-n>     116  </q-n></a>                                                    check_descriptor);                      <q-m>-- Generate report based on results and exit.</q-m>
<a name="117"><q-n>     117  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="118"><q-n>     118  </q-n></a>            <q-w>end</q-w> <q-w>process</q-w>;
<a name="119"><q-n>     119  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="120"><q-n>     120  </q-n></a>
<a name="121"><q-n>     121  </q-n></a>
<a name="122"><q-n>     122  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="123"><q-n>     123  </q-n></a>    chk:    <q-w>process</q-w> <q-w>is</q-w>
<a name="124"><q-n>     124  </q-n></a>                <q-w>constant</q-w>    this            :   <q-t>string</q-w>      :=  <q-l>"process_chk"</q-l>;
<a name="125"><q-n>     125  </q-n></a>            <q-w>begin</q-w>
<a name="126"><q-n>     126  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="127"><q-n>     127  </q-n></a>                run_check(RTL_NAME_G,this);
<a name="128"><q-n>     128  </q-n></a>                <q-m>------------------------------------------------------</q-m>
<a name="129"><q-n>     129  </q-n></a>            <q-w>end</q-w> <q-w>process</q-w>;
<a name="130"><q-n>     130  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="131"><q-n>     131  </q-n></a>
<a name="132"><q-n>     132  </q-n></a>
<a name="133"><q-n>     133  </q-n></a>
<a name="134"><q-n>     134  </q-n></a>
<a name="135"><q-n>     135  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="136"><q-n>     136  </q-n></a>    rst_gen:    <q-w>process</q-w> <q-w>is</q-w>
<a name="137"><q-n>     137  </q-n></a>                    <q-w>constant</q-w>    this            :   <q-t>string</q-w>      :=  <q-l>"process_rst_gen"</q-l>;
<a name="138"><q-n>     138  </q-n></a>                <q-w>begin</q-w>
<a name="139"><q-n>     139  </q-n></a>
<a name="140"><q-n>     140  </q-n></a>                    <q-w>wait</q-w> <q-w>on</q-w> tb_if.rstn_req;
<a name="141"><q-n>     141  </q-n></a>
<a name="142"><q-n>     142  </q-n></a>                    <q-w>if</q-w>(tb_if.rstn_req = '1')    <q-w>then</q-w>
<a name="143"><q-n>     143  </q-n></a>                        tb_if.rstn     &lt;=  '0'; print(this &amp;<q-l>": Reset is asserted."</q-l>, 1);
<a name="144"><q-n>     144  </q-n></a>                    <q-w>else</q-w>
<a name="145"><q-n>     145  </q-n></a>                        tb_if.rstn     &lt;=  '1'; print(this &amp;<q-l>": Reset is de-asserted."</q-l>, 1);
<a name="146"><q-n>     146  </q-n></a>                    <q-w>end</q-w> <q-w>if</q-w>;
<a name="147"><q-n>     147  </q-n></a>
<a name="148"><q-n>     148  </q-n></a>                <q-w>end</q-w> <q-w>process</q-w>;
<a name="149"><q-n>     149  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="150"><q-n>     150  </q-n></a>
<a name="151"><q-n>     151  </q-n></a>
<a name="152"><q-n>     152  </q-n></a>
<a name="153"><q-n>     153  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="154"><q-n>     154  </q-n></a>    clk_gen:    tb_if.clk  &lt;=  <q-w>not</q-w> tb_if.clk  <q-w>after</q-w> (clk_per_c/2) <q-w>when</q-w> (tb_if.clk_en = '1') <q-w>else</q-w> '1';
<a name="155"><q-n>     155  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="156"><q-n>     156  </q-n></a>    L_DUT:  <q-w>entity</q-w> work.reset_synchronizer(rtl)
<a name="157"><q-n>     157  </q-n></a>                <q-m>--generic map(</q-m>
<a name="158"><q-n>     158  </q-n></a>                <q-m>--)</q-m>
<a name="159"><q-n>     159  </q-n></a>                <q-w>port</q-w> <q-w>map</q-w>(
<a name="160"><q-n>     160  </q-n></a>                    clk             =&gt;  tb_if.clk               ,
<a name="161"><q-n>     161  </q-n></a>                    raw_rst         =&gt;  tb_if.rstn              ,
<a name="162"><q-n>     162  </q-n></a>                    synced_rst      =&gt;  rtl_out_if.synced_rst
<a name="163"><q-n>     163  </q-n></a>                );
<a name="164"><q-n>     164  </q-n></a>    <q-m>-----------------------------------------------------------------------------------------</q-m>
<a name="165"><q-n>     165  </q-n></a>
<a name="166"><q-n>     166  </q-n></a><q-w>end</q-w> <q-w>architecture</q-w>;
<a name="167"><q-n>     167  </q-n></a>
<a name="168"><q-n>     168  </q-n></a>
<a name="169"><q-n>     169  </q-n></a>
<a name="170"><q-n>     170  </q-n></a>
<a name="171"><q-n>     171  </q-n></a>
</tt>
</pre>

  
</body>
</html>
