
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="2"><q-n>     2  </q-n></a><q-m>--</q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>-- Author: Otto Horvath</q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>--</q-m>
<a name="5"><q-n>     5  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="6"><q-n>     6  </q-n></a><q-m>--</q-m>
<a name="7"><q-n>     7  </q-n></a><q-m>-- Description: ~ Generic reset synchronizer for de-asserting async. reset</q-m>
<a name="8"><q-n>     8  </q-n></a><q-m>--</q-m>
<a name="9"><q-n>     9  </q-n></a><q-m>--</q-m>
<a name="10"><q-n>     10  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="11"><q-n>     11  </q-n></a>
<a name="12"><q-n>     12  </q-n></a><q-w>library</q-w> ieee                    ;
<a name="13"><q-n>     13  </q-n></a><q-w>use</q-w>     ieee.std_logic_1164.<q-w>all</q-w> ;
<a name="14"><q-n>     14  </q-n></a><q-w>use</q-w>     ieee.numeric_std.<q-w>all</q-w>    ;
<a name="15"><q-n>     15  </q-n></a>
<a name="16"><q-n>     16  </q-n></a>
<a name="17"><q-n>     17  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="18"><q-n>     18  </q-n></a><q-w>entity</q-w> reset_synchronizer <q-w>is</q-w>
<a name="19"><q-n>     19  </q-n></a>    <q-w>generic</q-w>(
<a name="20"><q-n>     20  </q-n></a>        ACTIVE_LOW  :   <q-t>boolean</q-w> :=  true;
<a name="21"><q-n>     21  </q-n></a>        SYNC_LVL    :   <q-t>integer</q-w> :=  2
<a name="22"><q-n>     22  </q-n></a>    );
<a name="23"><q-n>     23  </q-n></a>    <q-w>port</q-w>(
<a name="24"><q-n>     24  </q-n></a>        clk         :   <q-a>in</q-w>  <q-t>std_logic</q-w>;
<a name="25"><q-n>     25  </q-n></a>        raw_rst     :   <q-a>in</q-w>  <q-t>std_logic</q-w>;
<a name="26"><q-n>     26  </q-n></a>        synced_rst  :   <q-a>out</q-w> <q-t>std_logic</q-w>
<a name="27"><q-n>     27  </q-n></a>    );
<a name="28"><q-n>     28  </q-n></a><q-w>end</q-w> <q-w>entity</q-w> reset_synchronizer;
<a name="29"><q-n>     29  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="30"><q-n>     30  </q-n></a>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
<a name="33"><q-n>     33  </q-n></a><q-w>architecture</q-w> rtl <q-w>of</q-w> reset_synchronizer <q-w>is</q-w>
<a name="34"><q-n>     34  </q-n></a>
<a name="35"><q-n>     35  </q-n></a>    <q-m>-- Wires between the intermediate flops.</q-m>
<a name="36"><q-n>     36  </q-n></a>    <q-m>-- Only interesting if SYNC_LVL is greater than 2.</q-m>
<a name="37"><q-n>     37  </q-n></a>    <q-m>-- ==============================================</q-m>
<a name="38"><q-n>     38  </q-n></a>    <q-w>signal</q-w>  intermediate_wire:  <q-t>std_logic_vector</q-w>(SYNC_LVL-2 <q-w>downto</q-w> 0);
<a name="39"><q-n>     39  </q-n></a>
<a name="40"><q-n>     40  </q-n></a>    <q-m>-- Constant input logic to the sync. chain</q-m>
<a name="41"><q-n>     41  </q-n></a>    <q-m>-- based on active LOW/HIGH reset getting synchronized</q-m>
<a name="42"><q-n>     42  </q-n></a>    <q-m>-- ======================================</q-m>
<a name="43"><q-n>     43  </q-n></a>    <q-w>signal</q-w>  const_logic_value:  <q-t>std_logic</q-w>;
<a name="44"><q-n>     44  </q-n></a>
<a name="45"><q-n>     45  </q-n></a><q-w>begin</q-w>
<a name="46"><q-n>     46  </q-n></a>
<a name="47"><q-n>     47  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="48"><q-n>     48  </q-n></a>    L_CONST_1   :   <q-w>if</q-w>(ACTIVE_LOW = true)   <q-w>generate</q-w>
<a name="49"><q-n>     49  </q-n></a>                        const_logic_value   &lt;=  '1';
<a name="50"><q-n>     50  </q-n></a>                    <q-w>end</q-w> <q-w>generate</q-w>;
<a name="51"><q-n>     51  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="52"><q-n>     52  </q-n></a>    L_CONST_0   :   <q-w>if</q-w>(ACTIVE_LOW = false)   <q-w>generate</q-w>
<a name="53"><q-n>     53  </q-n></a>                        const_logic_value   &lt;=  '0';
<a name="54"><q-n>     54  </q-n></a>                    <q-w>end</q-w> <q-w>generate</q-w>;
<a name="55"><q-n>     55  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="56"><q-n>     56  </q-n></a>    L_FIRST:    <q-w>entity</q-w>  work.reset_flop(rtl)
<a name="57"><q-n>     57  </q-n></a>                    <q-w>generic</q-w> <q-w>map</q-w>(
<a name="58"><q-n>     58  </q-n></a>                        ACTIVE_LOW  =&gt;  ACTIVE_LOW
<a name="59"><q-n>     59  </q-n></a>                    )
<a name="60"><q-n>     60  </q-n></a>                    <q-w>port</q-w> <q-w>map</q-w>(
<a name="61"><q-n>     61  </q-n></a>                        clk   =&gt;  clk       ,
<a name="62"><q-n>     62  </q-n></a>                        rst   =&gt;  raw_rst   ,
<a name="63"><q-n>     63  </q-n></a>                        d     =&gt;  const_logic_value  ,
<a name="64"><q-n>     64  </q-n></a>                        q     =&gt;  intermediate_wire(0)
<a name="65"><q-n>     65  </q-n></a>                    );
<a name="66"><q-n>     66  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="67"><q-n>     67  </q-n></a>    L_LAST :    <q-w>entity</q-w>  work.reset_flop(rtl)
<a name="68"><q-n>     68  </q-n></a>                    <q-w>generic</q-w> <q-w>map</q-w>(
<a name="69"><q-n>     69  </q-n></a>                        ACTIVE_LOW  =&gt;  ACTIVE_LOW
<a name="70"><q-n>     70  </q-n></a>                    )
<a name="71"><q-n>     71  </q-n></a>                    <q-w>port</q-w> <q-w>map</q-w>(
<a name="72"><q-n>     72  </q-n></a>                        clk   =&gt;  clk       ,
<a name="73"><q-n>     73  </q-n></a>                        rst   =&gt;  raw_rst   ,
<a name="74"><q-n>     74  </q-n></a>                        d     =&gt;  intermediate_wire(SYNC_LVL-2),
<a name="75"><q-n>     75  </q-n></a>                        q     =&gt;  synced_rst
<a name="76"><q-n>     76  </q-n></a>                    );
<a name="77"><q-n>     77  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="78"><q-n>     78  </q-n></a>    L_INTER:    <q-w>for</q-w> ii <q-a>in</q-w> 1 <q-w>to</q-w> SYNC_LVL-2 <q-w>generate</q-w>
<a name="79"><q-n>     79  </q-n></a>                    <q-m>------------------------------------</q-m>
<a name="80"><q-n>     80  </q-n></a>                    L_IF:   <q-w>if</q-w>(SYNC_LVL &gt; 2)  <q-w>generate</q-w>
<a name="81"><q-n>     81  </q-n></a>                        <q-m>--------------------------------</q-m>
<a name="82"><q-n>     82  </q-n></a>                        L_U:    <q-w>entity</q-w> work.reset_flop(rtl)
<a name="83"><q-n>     83  </q-n></a>                                    <q-w>generic</q-w> <q-w>map</q-w>(
<a name="84"><q-n>     84  </q-n></a>                                        ACTIVE_LOW  =&gt;  ACTIVE_LOW
<a name="85"><q-n>     85  </q-n></a>                                    )
<a name="86"><q-n>     86  </q-n></a>                                    <q-w>port</q-w> <q-w>map</q-w>(
<a name="87"><q-n>     87  </q-n></a>                                        clk =&gt;  clk     ,
<a name="88"><q-n>     88  </q-n></a>                                        rst =&gt;  raw_rst ,
<a name="89"><q-n>     89  </q-n></a>                                        d   =&gt;  intermediate_wire(ii-1),
<a name="90"><q-n>     90  </q-n></a>                                        q   =&gt;  intermediate_wire(ii)
<a name="91"><q-n>     91  </q-n></a>                                    );
<a name="92"><q-n>     92  </q-n></a>                       <q-m>--------------------------------</q-m>
<a name="93"><q-n>     93  </q-n></a>                            <q-w>end</q-w> <q-w>generate</q-w>;
<a name="94"><q-n>     94  </q-n></a>                    <q-m>------------------------------------</q-m>
<a name="95"><q-n>     95  </q-n></a>                <q-w>end</q-w> <q-w>generate</q-w>;
<a name="96"><q-n>     96  </q-n></a>    <q-m>----------------------------------------------------------</q-m>
<a name="97"><q-n>     97  </q-n></a>
<a name="98"><q-n>     98  </q-n></a><q-w>end</q-w> <q-w>architecture</q-w> rtl;
<a name="99"><q-n>     99  </q-n></a><q-m>---------------------------------------------------------------------------</q-m>
</tt>
</pre>

  
</body>
</html>
